{
  "name": "RepoXplorer",
  "tagline": "RepoXplorer is a small stats and charts utility for GIT repositories",
  "body": "# RepoXplorer\r\n\r\nRepoXplorer is a small stats and charts utility for GIT repositories.\r\nIts main purpose is to ease the visualization of stats for one or\r\nmore projects.\r\n\r\nAs lot of projects are composed of multiple sub-projects (server, client,\r\nlibraries). RepoXplorer let's you define how a project is composed and\r\nthen compute stats across multiple sub-projects.\r\n\r\nFurthermore it is possible to define author identities by listing\r\nauthor' emails and then avoid duplicated author in computed stats.\r\n\r\nRepoXplorer relies on ElasticSearch and Pecan. Once the service is\r\nstarted only a web browser is needed to access the user interface.\r\n\r\n## A visual overview of the user interface\r\n\r\n![capture 1](https://raw.githubusercontent.com/morucci/repoxplorer/master/imgs/repoxplorer.jpg)\r\n\r\n## How to install\r\n\r\nFirst install repoxplorer in a virtualenv.\r\n\r\n```Shell\r\nvirtualenv ~/repoxplorer\r\n. ~/repoxplorer/bin/activate\r\npip install -r requirements.txt\r\npython setup.py install\r\n```\r\n\r\nInstall Elasticsearch. Here we use an already \"ready to use\" Docker\r\ncontainer. But you should definitely use a regular installation\r\nof ElasticSearch.\r\n\r\n```Shell\r\n~/repoxplorer/bin/el-start.sh\r\n```\r\n\r\n## How to index a list of GIT hosted projects\r\n\r\nA yaml file should be provisioned with the projects you want to index. The\r\nfile $prefix/local/share/repoxplorer/projects.yaml is expected to be found.\r\n\r\nBelow is the default projects.yaml files provided. Note that Barbican project\r\nis composed of two sub-projects: the server and the client.\r\n\r\nEdit this file to add projects you want to index.\r\n~/repoxplorer/local/share/repoxplorer/projects.yaml.\r\n\r\n```YAML\r\n---\r\ntemplates:\r\n- name: default\r\n  uri: https://github.com/openstack/%(name)s\r\n  branch: master\r\n  gitweb: https://github.com/openstack/%(name)s/commit/%%(sha)s\r\n\r\nprojects:\r\n  Barbican:\r\n  - name: barbican\r\n    template: default\r\n  - name: python-barbicanclient\r\n    template: default\r\n```\r\n\r\nThen start the GIT indexer manually.\r\n\r\n```Shell\r\npython ~/repoxplorer/bin/repoxplorer-indexer\r\n```\r\n\r\nIn order to run the indexer continuously you can use the command\r\nargument \"--forever\".\r\n\r\nFurthermore you can install the systemd unit file for the indexer.\r\n\r\n```\r\nsudo cp etc/repoxplorer.service /usr/lib/systemd/system/repoxplorer.service\r\n# Be sure to set the correct path to the repoxplorer-indexer script\r\n\r\nsudo systemctl daemon-reload\r\nsudo systemctl start repoxplorer\r\nsudo systemctl status repoxplorer\r\n\r\n# You can check the indexer log via journalctl\r\nsudo journalctl -f\r\n```\r\n\r\n## Start the Web UI\r\n\r\nStart the RepoXplorer web app.\r\n\r\n```Shell\r\nuwsgi --http-socket :8080 --pecan ~/repoxplorer/local/share/repoxplorer/config.py\r\n```\r\n\r\nThen open a Web browser to access http://localhost:8080. You will be faced a list\r\nof projects such as defined in projects.yaml. A click on one of the project's ids\r\nwill redirect you to the statistics page of the given project.\r\n\r\nFurthermore you can install the systemd unit file for the webui.\r\n\r\n```\r\nsudo cp etc/repoxplorer-webui.service /usr/lib/systemd/system/repoxplorer-webui.service\r\n# Be sure to set the correct path to the uwsgi tool and to the config.py file.\r\n\r\nsudo systemctl daemon-reload\r\nsudo systemctl start repoxplorer-webui\r\nsudo systemctl status repoxplorer-webui\r\n\r\n# You can check the webui log via journalctl\r\nsudo journalctl -f\r\n```\r\n\r\n## Sanitize author identities\r\n\r\nIn the example below all contributions for John Doe will be stacked if\r\nthe author email field of the GIT commit object is one of the defined\r\nemails.\r\n\r\nEdit ~/repoxplorer/local/share/repoxplorer/idents.yaml\r\n\r\n```YAML\r\n---\r\n- name: John Doe\r\n  emails:\r\n    - john.doe@server\r\n    - jdoe@server\r\n```\r\n\r\n## Run tests\r\n\r\n```Shell\r\n./bin/el-start.sh\r\ntox\r\n```\r\n\r\n## Contribute\r\n\r\nRepoXplorer is new and should be considered Alpha ! Feel free to help !\r\nLook at the feature requests list on the Github issue tracker:\r\n\r\n- [Feature requests](https://github.com/morucci/repoxplorer/issues?q=is%3Aopen+is%3Aissue+label%3Aenhancement)\r\n\r\nIf you find an issue please fill a bug report here:\r\n\r\n- [Report an issue](https://github.com/morucci/repoxplorer/issues/new)\r\n\r\nRepoXplorer is hosted on this Gerrit instance [Software Factory] (http://softwarefactory-project.io)\r\na contribution should be done via Gerrit instead of using the Pull Request system of Github.\r\n\r\nIf you wante to help by contributing on the code:\r\n\r\n```Shell\r\ngit clone http://softwarefactory-project.io/r/repoxplorer\r\ngit review -s # You should have login on Software Factory using you Github identity first\r\n```\r\n\r\nYour local copy is now configured. Please read the following instructions to\r\nlearn about git review sub-command [git-review] (http://softwarefactory-project.io/docs/submitpatches.html#initialize-the-git-remote-with-git-review).\r\n\r\n```\r\n# make some changes\r\ngit add -a\r\ngit commit # local commit your changes\r\ngit review # propose your changes on Gerrit\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}